**This is a Python script containing RESTful APIs to interact with a users' database**

**Compile 'api.py' and use a REST client, e.g. Postman, to use the APIs**

Details of the technical stack used:
- Web framework used: Flask
- Database used: SQLite
- Structure of data in the database: 
	- Table name: users
	- Each user has the following attributes:-
		ID (NUMBER)
		First Name (TEXT)
		Last Name (TEXT)
		Company Name
		Age (NUMBER)
		City (TEXT)
		State (TEXT)
		Zip (NUMBER)
		Email (TEXT)
		Web (TEXT)
- APIs offered by the program:
	- /api/users - GET - To list the users: It prints all the users(default limit is 5) in the database in JSON format. If successful, sends HTML code 200.
	- /api/users - GET - Certain query paramters can be provided in the path parameter. If successful, sends HTML code 200. Query parameters 		which are supported are:
		- page: a number for pagination
		- limit: no. of items to be return, default limit is 5
		- name: search user by name as substring in First Name or Last Name (Note, use substring matching algorithm/pattern to match the name)
		- Sort: name of attribute, the items to be sort. By default it returns items in ascending order if  this parameter exist, and if value 		of parameter is prefix with ‘-’ character, then it should return item in descending order
	- /api/users{id} - GET - To get the details of a user by id. It prints the user in JSON format. If successful, sends HTML code 200.
	- /api/users - POST - To create a new user: Request payload should be provided in a JSON format. Creates one user at a time. If successful, 	sends HTML code 201.
	- /api/users/{id} - PUT - To update the details of a user by id. Request payload should be provided in a JSON format. If successful, sends 		HTML code 200.
	- /api/users/{id} - DELETE - To delete the user by id. If successful, sends HTML code 200.

Contents of the folder:
	- api.py: Python script containing the APIs.
	- users.db: SQLite Database file
	- readme.txt
	- templates/result.html: html script to print "success" or "failure" for each operation. Only for test purpose.